var documenterSearchIndex = {"docs":
[{"location":"","page":"SubspacePreservingSparsification","title":"SubspacePreservingSparsification","text":"DocTestSetup = quote\r\n    using SparseArrays\r\n    using SubspacePreservingSparsification\r\nend","category":"page"},{"location":"#SubspacePreservingSparsification","page":"SubspacePreservingSparsification","title":"SubspacePreservingSparsification","text":"","category":"section"},{"location":"","page":"SubspacePreservingSparsification","title":"SubspacePreservingSparsification","text":"Implementation of an algorithm, that takes a real Matrix M and finds a sparse approximation of the same size. The algorithm was developt by Chetan Jhurani under the name sparse spectal approximation (SSA). See https://github.com/cjhurani/txssa for more detailed documentation, also with regard to the mathematical background, and for an implementations in C/C++ and in Matlab.","category":"page"},{"location":"#Installation","page":"SubspacePreservingSparsification","title":"Installation","text":"","category":"section"},{"location":"","page":"SubspacePreservingSparsification","title":"SubspacePreservingSparsification","text":"To install this package and its dependencies, open the Julia REPL and run ","category":"page"},{"location":"","page":"SubspacePreservingSparsification","title":"SubspacePreservingSparsification","text":"julia> ]add SSA","category":"page"},{"location":"#Example","page":"SubspacePreservingSparsification","title":"Example","text":"","category":"section"},{"location":"","page":"SubspacePreservingSparsification","title":"SubspacePreservingSparsification","text":"julia> sps_compute([16.99 65; 0.1 17.01], 0.6, 2, 200)\r\n2×2 SparseMatrixCSC{Float64, Int64} with 3 stored entries:\r\n 16.8041  64.2499\r\n   ⋅      16.8041","category":"page"}]
}
